// vite.config.mjs
import { svelte } from "file:///C:/Users/adam_/Desktop/FoundryVTT-Scripts/FoundryVTT-ItemPiles/node_modules/@sveltejs/vite-plugin-svelte/dist/index.js";
import resolve from "file:///C:/Users/adam_/Desktop/FoundryVTT-Scripts/FoundryVTT-ItemPiles/node_modules/@rollup/plugin-node-resolve/dist/es/index.js";
import preprocess from "file:///C:/Users/adam_/Desktop/FoundryVTT-Scripts/FoundryVTT-ItemPiles/node_modules/svelte-preprocess/dist/index.js";
import {
  postcssConfig,
  terserConfig,
  typhonjsRuntime
} from "file:///C:/Users/adam_/Desktop/FoundryVTT-Scripts/FoundryVTT-ItemPiles/node_modules/@typhonjs-fvtt/runtime/.rollup/remote/index.js";
var __vite_injected_original_dirname = "C:\\Users\\adam_\\Desktop\\FoundryVTT-Scripts\\FoundryVTT-ItemPiles";
var s_COMPRESS = false;
var s_SOURCEMAPS = true;
var s_TYPHONJS_MODULE_LIB = false;
var s_RESOLVE_CONFIG = {
  browser: true,
  dedupe: ["svelte"]
};
var vite_config_default = () => {
  return {
    root: "src/",
    base: "/modules/item-piles/",
    publicDir: false,
    cacheDir: "../.vite-cache",
    resolve: { conditions: ["import", "browser"] },
    esbuild: {
      target: ["es2022", "chrome100"],
      keepNames: true
    },
    css: {
      postcss: postcssConfig({ compress: s_COMPRESS, sourceMap: s_SOURCEMAPS })
    },
    server: {
      port: 29999,
      open: false,
      proxy: {
        "^(/modules/item-piles/languages)": "http://127.0.0.1:30000",
        "^(?!/modules/item-piles/)": "http://127.0.0.1:30000",
        "/socket.io": { target: "ws://127.0.0.1:30000", ws: true }
      }
    },
    build: {
      outDir: __vite_injected_original_dirname,
      emptyOutDir: false,
      sourcemap: s_SOURCEMAPS,
      brotliSize: true,
      minify: s_COMPRESS ? "terser" : false,
      target: ["es2022", "chrome100"],
      terserOptions: s_COMPRESS ? { ...terserConfig(), ecma: 2022 } : void 0,
      lib: {
        entry: "./module.js",
        formats: ["es"],
        fileName: "module"
      }
    },
    plugins: [
      svelte({
        preprocess: preprocess(),
        onwarn: (warning, handler) => {
          if (warning.message.includes(`<a> element should have an href attribute`)) {
            return;
          }
          handler(warning);
        }
      }),
      resolve(s_RESOLVE_CONFIG),
      s_TYPHONJS_MODULE_LIB && typhonjsRuntime()
    ]
  };
};
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcubWpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxcYWRhbV9cXFxcRGVza3RvcFxcXFxGb3VuZHJ5VlRULVNjcmlwdHNcXFxcRm91bmRyeVZUVC1JdGVtUGlsZXNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkM6XFxcXFVzZXJzXFxcXGFkYW1fXFxcXERlc2t0b3BcXFxcRm91bmRyeVZUVC1TY3JpcHRzXFxcXEZvdW5kcnlWVFQtSXRlbVBpbGVzXFxcXHZpdGUuY29uZmlnLm1qc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vQzovVXNlcnMvYWRhbV8vRGVza3RvcC9Gb3VuZHJ5VlRULVNjcmlwdHMvRm91bmRyeVZUVC1JdGVtUGlsZXMvdml0ZS5jb25maWcubWpzXCI7aW1wb3J0IHsgc3ZlbHRlIH0gZnJvbSAnQHN2ZWx0ZWpzL3ZpdGUtcGx1Z2luLXN2ZWx0ZSc7XG5pbXBvcnQgcmVzb2x2ZSBmcm9tICdAcm9sbHVwL3BsdWdpbi1ub2RlLXJlc29sdmUnOyAvLyBUaGlzIHJlc29sdmVzIE5QTSBtb2R1bGVzIGZyb20gbm9kZV9tb2R1bGVzLlxuaW1wb3J0IHByZXByb2Nlc3MgZnJvbSAnc3ZlbHRlLXByZXByb2Nlc3MnO1xuaW1wb3J0IHtcbiAgcG9zdGNzc0NvbmZpZyxcbiAgdGVyc2VyQ29uZmlnLFxuICB0eXBob25qc1J1bnRpbWVcbn0gZnJvbSAnQHR5cGhvbmpzLWZ2dHQvcnVudGltZS9yb2xsdXAnO1xuXG5jb25zdCBzX0NPTVBSRVNTID0gZmFsc2U7ICAvLyBTZXQgdG8gdHJ1ZSB0byBjb21wcmVzcyB0aGUgbW9kdWxlIGJ1bmRsZS5cbmNvbnN0IHNfU09VUkNFTUFQUyA9IHRydWU7IC8vIEdlbmVyYXRlIHNvdXJjZW1hcHMgZm9yIHRoZSBidW5kbGUgKHJlY29tbWVuZGVkKS5cblxuLy8gRVhQRVJJTUVOVEFMOiBTZXQgdG8gdHJ1ZSB0byBlbmFibGUgbGlua2luZyBhZ2FpbnN0IHRoZSBUeXBob25KUyBSdW50aW1lIExpYnJhcnkgbW9kdWxlLlxuLy8gWW91IG11c3QgYWRkIGEgRm91bmRyeSBtb2R1bGUgZGVwZW5kZW5jeSBvbiB0aGUgYHR5cGhvbmpzYCBGb3VuZHJ5IHBhY2thZ2Ugb3IgbWFudWFsbHkgaW5zdGFsbCBpdCBpbiBGb3VuZHJ5IGZyb206XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdHlwaG9uanMtZnZ0dC1saWIvdHlwaG9uanMvcmVsZWFzZXMvbGF0ZXN0L2Rvd25sb2FkL21vZHVsZS5qc29uXG5jb25zdCBzX1RZUEhPTkpTX01PRFVMRV9MSUIgPSBmYWxzZTtcblxuLy8gVXNlZCBpbiBidW5kbGluZy5cbmNvbnN0IHNfUkVTT0xWRV9DT05GSUcgPSB7XG4gIGJyb3dzZXI6IHRydWUsXG4gIGRlZHVwZTogWydzdmVsdGUnXVxufTtcblxuLy8gQVRURU5USU9OIVxuLy8gWW91IG11c3QgY2hhbmdlIGBiYXNlYCBhbmQgdGhlIGBwcm94eWAgc3RyaW5ncyByZXBsYWNpbmcgYC9tb2R1bGVzL2l0ZW0tcGlsZXMvYCB3aXRoIHlvdXJcbi8vIG1vZHVsZSBvciBzeXN0ZW0gSUQuXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgLyoqIEB0eXBlIHtpbXBvcnQoJ3ZpdGUnKS5Vc2VyQ29uZmlnfSAqL1xuICByZXR1cm4ge1xuICAgIHJvb3Q6ICdzcmMvJywgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNvdXJjZSBsb2NhdGlvbiAvIGVzYnVpbGQgcm9vdC5cbiAgICBiYXNlOiAnL21vZHVsZXMvaXRlbS1waWxlcy8nLCAgIC8vIEJhc2UgbW9kdWxlIHBhdGggdGhhdCAzMDAwMSAvIHNlcnZlZCBkZXYgZGlyZWN0b3J5LlxuICAgIHB1YmxpY0RpcjogZmFsc2UsICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE5vIHB1YmxpYyByZXNvdXJjZXMgdG8gY29weS5cbiAgICBjYWNoZURpcjogJy4uLy52aXRlLWNhY2hlJywgICAgICAgICAgICAgICAvLyBSZWxhdGl2ZSBmcm9tIHJvb3QgZGlyZWN0b3J5LlxuICAgIFxuICAgIHJlc29sdmU6IHsgY29uZGl0aW9uczogWydpbXBvcnQnLCAnYnJvd3NlciddIH0sXG4gICAgXG4gICAgZXNidWlsZDoge1xuICAgICAgdGFyZ2V0OiBbJ2VzMjAyMicsICdjaHJvbWUxMDAnXSxcbiAgICAgIGtlZXBOYW1lczogdHJ1ZSAgIC8vIE5vdGU6IGRvZXNuJ3Qgc2VlbSB0byB3b3JrLlxuICAgIH0sXG4gICAgXG4gICAgY3NzOiB7XG4gICAgICAvLyBDcmVhdGVzIGEgc3RhbmRhcmQgY29uZmlndXJhdGlvbiBmb3IgUG9zdENTUyB3aXRoIGF1dG9wcmVmaXhlciAmIHBvc3Rjc3MtcHJlc2V0LWVudi5cbiAgICAgIHBvc3Rjc3M6IHBvc3Rjc3NDb25maWcoeyBjb21wcmVzczogc19DT01QUkVTUywgc291cmNlTWFwOiBzX1NPVVJDRU1BUFMgfSlcbiAgICB9LFxuICAgIFxuICAgIC8vIEFib3V0IHNlcnZlciBvcHRpb25zOlxuICAgIC8vIC0gU2V0IHRvIGBvcGVuYCB0byBib29sZWFuIGBmYWxzZWAgdG8gbm90IG9wZW4gYSBicm93c2VyIHdpbmRvdyBhdXRvbWF0aWNhbGx5LiBUaGlzIGlzIHVzZWZ1bCBpZiB5b3Ugc2V0IHVwIGFcbiAgICAvLyBkZWJ1Z2dlciBpbnN0YW5jZSBpbiB5b3VyIElERSBhbmQgbGF1bmNoIGl0IHdpdGggdGhlIFVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMDEvZ2FtZScuXG4gICAgLy9cbiAgICAvLyAtIFRoZSB0b3AgcHJveHkgZW50cnkgZm9yIGBsYW5nYCB3aWxsIHB1bGwgdGhlIGxhbmd1YWdlIHJlc291cmNlcyBmcm9tIHRoZSBtYWluIEZvdW5kcnkgLyAzMDAwMCBzZXJ2ZXIuIFRoaXNcbiAgICAvLyBpcyBuZWNlc3NhcnkgdG8gcmVmZXJlbmNlIHRoZSBkZXYgcmVzb3VyY2VzIGFzIHRoZSByb290IGlzIGAvc3JjYCBhbmQgdGhlcmUgaXMgbm8gcHVibGljIC8gc3RhdGljIHJlc291cmNlc1xuICAgIC8vIHNlcnZlZC5cbiAgICBzZXJ2ZXI6IHtcbiAgICAgIHBvcnQ6IDI5OTk5LFxuICAgICAgb3BlbjogZmFsc2UsXG4gICAgICBwcm94eToge1xuICAgICAgICAnXigvbW9kdWxlcy9pdGVtLXBpbGVzL2xhbmd1YWdlcyknOiAnaHR0cDovLzEyNy4wLjAuMTozMDAwMCcsXG4gICAgICAgICdeKD8hL21vZHVsZXMvaXRlbS1waWxlcy8pJzogJ2h0dHA6Ly8xMjcuMC4wLjE6MzAwMDAnLFxuICAgICAgICAnL3NvY2tldC5pbyc6IHsgdGFyZ2V0OiAnd3M6Ly8xMjcuMC4wLjE6MzAwMDAnLCB3czogdHJ1ZSB9XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBidWlsZDoge1xuICAgICAgb3V0RGlyOiBfX2Rpcm5hbWUsXG4gICAgICBlbXB0eU91dERpcjogZmFsc2UsXG4gICAgICBzb3VyY2VtYXA6IHNfU09VUkNFTUFQUyxcbiAgICAgIGJyb3RsaVNpemU6IHRydWUsXG4gICAgICBtaW5pZnk6IHNfQ09NUFJFU1MgPyAndGVyc2VyJyA6IGZhbHNlLFxuICAgICAgdGFyZ2V0OiBbJ2VzMjAyMicsICdjaHJvbWUxMDAnXSxcbiAgICAgIHRlcnNlck9wdGlvbnM6IHNfQ09NUFJFU1MgPyB7IC4uLnRlcnNlckNvbmZpZygpLCBlY21hOiAyMDIyIH0gOiB2b2lkIDAsXG4gICAgICBsaWI6IHtcbiAgICAgICAgZW50cnk6ICcuL21vZHVsZS5qcycsXG4gICAgICAgIGZvcm1hdHM6IFsnZXMnXSxcbiAgICAgICAgZmlsZU5hbWU6ICdtb2R1bGUnXG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBwbHVnaW5zOiBbXG4gICAgICBzdmVsdGUoe1xuICAgICAgICBwcmVwcm9jZXNzOiBwcmVwcm9jZXNzKCksXG4gICAgICAgIG9ud2FybjogKHdhcm5pbmcsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgICAvLyBTdXBwcmVzcyBgYTExeS1taXNzaW5nLWF0dHJpYnV0ZWAgZm9yIG1pc3NpbmcgaHJlZiBpbiA8YT4gbGlua3MuXG4gICAgICAgICAgLy8gRm91bmRyeSBkb2Vzbid0IGZvbGxvdyBhY2Nlc3NpYmlsaXR5IHJ1bGVzLlxuICAgICAgICAgIGlmICh3YXJuaW5nLm1lc3NhZ2UuaW5jbHVkZXMoYDxhPiBlbGVtZW50IHNob3VsZCBoYXZlIGFuIGhyZWYgYXR0cmlidXRlYCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gTGV0IFJvbGx1cCBoYW5kbGUgYWxsIG90aGVyIHdhcm5pbmdzIG5vcm1hbGx5LlxuICAgICAgICAgIGhhbmRsZXIod2FybmluZyk7XG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAgIFxuICAgICAgcmVzb2x2ZShzX1JFU09MVkVfQ09ORklHKSwgICAgLy8gTmVjZXNzYXJ5IHdoZW4gYnVuZGxpbmcgbnBtLWxpbmtlZCBwYWNrYWdlcy5cbiAgICAgIFxuICAgICAgLy8gV2hlbiBzX1RZUEhPTkpTX01PRFVMRV9MSUIgaXMgdHJ1ZSB0cmFuc3BpbGUgYWdhaW5zdCB0aGUgRm91bmRyeSBtb2R1bGUgdmVyc2lvbiBvZiBUUkwuXG4gICAgICBzX1RZUEhPTkpTX01PRFVMRV9MSUIgJiYgdHlwaG9uanNSdW50aW1lKClcbiAgICBdXG4gIH07XG59O1xuXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQTBYLFNBQVMsY0FBYztBQUNqWixPQUFPLGFBQWE7QUFDcEIsT0FBTyxnQkFBZ0I7QUFDdkI7QUFBQSxFQUNFO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxPQUNLO0FBUFAsSUFBTSxtQ0FBbUM7QUFTekMsSUFBTSxhQUFhO0FBQ25CLElBQU0sZUFBZTtBQUtyQixJQUFNLHdCQUF3QjtBQUc5QixJQUFNLG1CQUFtQjtBQUFBLEVBQ3ZCLFNBQVM7QUFBQSxFQUNULFFBQVEsQ0FBQyxRQUFRO0FBQ25CO0FBTUEsSUFBTyxzQkFBUSxNQUFNO0FBRW5CLFNBQU87QUFBQSxJQUNMLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLFdBQVc7QUFBQSxJQUNYLFVBQVU7QUFBQSxJQUVWLFNBQVMsRUFBRSxZQUFZLENBQUMsVUFBVSxTQUFTLEVBQUU7QUFBQSxJQUU3QyxTQUFTO0FBQUEsTUFDUCxRQUFRLENBQUMsVUFBVSxXQUFXO0FBQUEsTUFDOUIsV0FBVztBQUFBLElBQ2I7QUFBQSxJQUVBLEtBQUs7QUFBQSxNQUVILFNBQVMsY0FBYyxFQUFFLFVBQVUsWUFBWSxXQUFXLGFBQWEsQ0FBQztBQUFBLElBQzFFO0FBQUEsSUFTQSxRQUFRO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsUUFDTCxvQ0FBb0M7QUFBQSxRQUNwQyw2QkFBNkI7QUFBQSxRQUM3QixjQUFjLEVBQUUsUUFBUSx3QkFBd0IsSUFBSSxLQUFLO0FBQUEsTUFDM0Q7QUFBQSxJQUNGO0FBQUEsSUFFQSxPQUFPO0FBQUEsTUFDTCxRQUFRO0FBQUEsTUFDUixhQUFhO0FBQUEsTUFDYixXQUFXO0FBQUEsTUFDWCxZQUFZO0FBQUEsTUFDWixRQUFRLGFBQWEsV0FBVztBQUFBLE1BQ2hDLFFBQVEsQ0FBQyxVQUFVLFdBQVc7QUFBQSxNQUM5QixlQUFlLGFBQWEsRUFBRSxHQUFHLGFBQWEsR0FBRyxNQUFNLEtBQUssSUFBSTtBQUFBLE1BQ2hFLEtBQUs7QUFBQSxRQUNILE9BQU87QUFBQSxRQUNQLFNBQVMsQ0FBQyxJQUFJO0FBQUEsUUFDZCxVQUFVO0FBQUEsTUFDWjtBQUFBLElBQ0Y7QUFBQSxJQUVBLFNBQVM7QUFBQSxNQUNQLE9BQU87QUFBQSxRQUNMLFlBQVksV0FBVztBQUFBLFFBQ3ZCLFFBQVEsQ0FBQyxTQUFTLFlBQVk7QUFHNUIsY0FBSSxRQUFRLFFBQVEsU0FBUywyQ0FBMkMsR0FBRztBQUN6RTtBQUFBLFVBQ0Y7QUFHQSxrQkFBUSxPQUFPO0FBQUEsUUFDakI7QUFBQSxNQUNGLENBQUM7QUFBQSxNQUVELFFBQVEsZ0JBQWdCO0FBQUEsTUFHeEIseUJBQXlCLGdCQUFnQjtBQUFBLElBQzNDO0FBQUEsRUFDRjtBQUNGOyIsCiAgIm5hbWVzIjogW10KfQo=
